version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto11
    commands:
      # Check if Docker is available (This should be true in most AWS CodeBuild environments)
      - echo Checking Docker installation...
      - docker --version
      # Check if Gradle is available (Pre-installed in AWS CodeBuild)
      - echo Checking Gradle installation...
      - gradle -v
  pre_build:
    commands:
      # Print the region and repository URI for debugging
      - echo "Region: us-east-1"
      - echo "Repository URI: 537124967315.dkr.ecr.us-east-1.amazonaws.com/flightregistry"
      # Ensure AWS_DEFAULT_REGION is set
      - |
        if [ -z "$AWS_DEFAULT_REGION" ]; then
          echo "AWS_DEFAULT_REGION is not set. Setting default region to us-east-1."
          export AWS_DEFAULT_REGION="us-east-1"  # Set your region if AWS_DEFAULT_REGION is not set
        fi
      # Authenticate Docker to AWS ECR using the updated AWS CLI v2 method
      - echo Logging in to Amazon ECR...
      - |
        if [ -z "$REPOSITORY_URI" ]; then
          echo "ERROR: REPOSITORY_URI is not set. Exiting..."
          exit 1
        fi
        $(aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI)
  build:
    commands:
      # Build the Spring Boot application with Gradle
      - echo Building the Spring Boot application...
      - gradle build
      # Build the Docker image
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
  post_build:
    commands:
      # Push the Docker image to ECR
      - echo Pushing the Docker image to Amazon ECR...
      - docker push $REPOSITORY_URI:$IMAGE_TAG

artifacts:
  files:
    - target/*.jar
